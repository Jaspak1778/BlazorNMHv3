@page "/newpost"
@inject HttpClient Http
@inject TokenService Token
@inject NavigationManager NavigationManager

<style>
    textarea {
        width: 100%;
        height: 150px;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
        resize: vertical;
    }
</style>

<h4>Uusi Postaus</h4>

<div>
    <div>
        <textarea class="textarea" placeholder="Julkaise jotain uutta!" rows="5" cols="40" @bind="postaus"></textarea>
    </div>

    <button class="btn btn-primary" @onclick="NewPost">Lähetä postaus</button>
</div>
<p>@announcer</p>

@code {
    private const string PostsUri = ApiCallerUri.Posts;

    private string? postaus;
    private string? announcer;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task NewPost()
    {
        try
        {
            var postData = new
            {
                content = postaus
            };

            var json = JsonSerializer.Serialize(postData);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            // Luo uusi HttpRequestMessage, jotta voimme lisätä Authorization-otsikon
            var requestMessage = new HttpRequestMessage(HttpMethod.Post, PostsUri)
                {
                    Content = content
                };

            // Lisää Authorization-otsikko käyttäen TokenService-luokkaa
            var accessToken = Token.GetAccessToken(); // Oletus: Token on `TokenService`-instanssi
            if (!string.IsNullOrEmpty(accessToken))
            {
                requestMessage.Headers.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);
            }
            else
            {
                announcer = "Julkaisun lähetys epäonnistui: Access token puuttuu.";
                return;
            }

            // Suorita pyyntö
            var response = await Http.SendAsync(requestMessage);

            if (response.IsSuccessStatusCode)
            {
                announcer = "Julkaisu lähetetty onnistuneesti!";
                postaus = ""; // Tyhjennetään kenttä onnistuneen lähetyksen jälkeen
   
            }
            else
            {
                announcer = "Julkaisun lähetys epäonnistui. Tarkista API.";
            }
        }
        catch (Exception ex)
        {
            announcer = $"Virhe: {ex.Message}";
        }
    }
}
